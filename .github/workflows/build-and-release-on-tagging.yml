name: Build & Release Electron App

permissions:
  contents: write
  actions: read

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    timeout-minutes: 60
    strategy:
      matrix:
        include:
          - os: macos-latest
            arch: x64
            platform: mac
          - os: macos-latest
            arch: arm64
            platform: mac
          - os: windows-latest
            arch: x64
            platform: win
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build
        timeout-minutes: 45
        shell: bash
        env:
          GITHUB_TOKEN: ""
          GH_TOKEN: ""
          CI: ""
        run: |
          if [ "${{ matrix.platform }}" = "mac" ]; then
            npm run build:electron -- --mac --${{ matrix.arch }} --publish=never
          else
            npm run build:electron -- --win --publish=never
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-${{ matrix.arch }}-artifacts
          path: dist/*
          retention-days: 7
          compression-level: 6
        timeout-minutes: 15

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**/Variable Tester-Setup-*.dmg
            dist/**/Variable Tester-Setup-*.exe
          body: |
            ### ðŸ“¦ Downloads
            - **macOS (arm64)**: For Apple Silicon Macs
            - **macOS (x64)**: For Intel Macs
            - **Windows (x64)**: For Windows 10/11

            ## Which should I download?
            - Download the `.exe` installer for Windows users.
            - Download the `.dmg` file for macOS users
              - If you are using an Intel Mac, you can download the x64 version.
              - If you are using an M-series Mac, you need to download the arm64 version.
                - M-series macs are required to use the included `remove-quarantine.command` helper script in the `.dmg` file to remove quarantine.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    runs-on: ubuntu-latest
    if: always() # run no matter what happened before
    needs: [build, release]
    steps:
      - name: Send NTFY notification
        run: |
          if [ "${{ needs.build.result }}" == "failure" ] || [ "${{ needs.release.result }}" == "failure" ]; then
            STATUS="failure"
          elif [ "${{ needs.build.result }}" == "cancelled" ] || [ "${{ needs.release.result }}" == "cancelled" ]; then
            STATUS="cancelled"
          elif [ "${{ needs.build.result }}" == "success" ] && [ "${{ needs.release.result }}" == "success" ]; then
            STATUS="success"
          else
            STATUS="completed with issues"
          fi
          
          curl -X POST \
            -A "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36" \
            -H "Title: GitHub Actions - Variable Tester" \
            -H "Tags: $( [ "$STATUS" == "success" ] && echo "white_check_mark" || echo "x" )" \
            -d "Build ${{ github.ref_name }} finished with status: $STATUS" \
            ${{ secrets.NTFY_ENDPOINT }}
